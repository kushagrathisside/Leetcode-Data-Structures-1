class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m=nums1.size();
        int n=nums2.size();
        priority_queue<int, vector<int>, greater<int>>pq(nums1.begin(), nums1.begin()+m);
        for(int i=0; i<n; i++) 
            pq.push(nums2[i]);
        nums1.clear();
        while(!pq.empty()) 
        {
            nums1.push_back(pq.top());
            pq.pop();
        }
        
        double x=0.00;
        if((nums1.size()%2)==1)
            //x= (double)nums1[(nums1.size()+1)/2.0]+50.0;
            x=nums1[(nums1.size()-1)/2.0];
        else x=((nums1[(nums1.size()/2)-1]+nums1[nums1.size()/2])/2.0);
        return x;
        
    }
};
